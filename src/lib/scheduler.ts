import cron from 'node-cron';
import { bot } from './telegramBot';
import { getUsersWithEnabledReports, generateUserReport } from './firebaseConfig';

const log = (message: string, data?: any) => {
  const timestamp = new Date().toISOString();
  console.log(`[${timestamp}] ${message}`, data || '');
};

export async function sendReports(type: 'daily' | 'weekly' | 'monthly') {
  try {
    log(`üì§ Starting ${type} reports`);

    const users = await getUsersWithEnabledReports();
    log(`üë• Found ${users.length} users with reports enabled`);

    if (users.length === 0) {
      log('‚ùå No users found with enabled reports');
      return;
    }

    for (const user of users) {
      try {
        if (!user.reports?.[type]) {
          log(`‚è≠ Skipping user ${user.userId} - ${type} report disabled`);
          continue;
        }

        log(`üõ† Generating report for ${user.userId}`);
        const report = await generateUserReport(user.userId, type);

        await bot.telegram.sendMessage(user.userId, report);
        log(`‚úÖ ${type} report sent to ${user.userId}`);
      } catch (error) {
        log(`‚ö†Ô∏è Error with user ${user.userId}:`, error instanceof Error ? error.message : error);
      }
    }
  } catch (error) {
    log(`üî• Global error in ${type} reports:`, error instanceof Error ? error.message : error);
  }
}

// üß™ –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ ‚Äî –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è DEBUG_CRON
// if (process.env.DEBUG_CRON === 'true') {
//   cron.schedule('*/2 * * * *', () => {
//     log('üêû [DEBUG] Cron heartbeat (every 2 min)');
//     sendReports('daily').catch(console.error);
//   });
// }

// üïò –ü—Ä–æ–¥–∞–∫—à–Ω-—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
cron.schedule('0 9 * * *', () => sendReports('daily'));   // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
cron.schedule('0 10 * * 1', () => sendReports('weekly')); // –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00
cron.schedule('0 11 1 * *', () => sendReports('monthly')); // 1 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞ –≤ 11:00

log('‚úÖ Scheduler initialized');
