import { Transaction } from '@/types';
import { useTranslation } from '@/hooks/useTranslation';

type TFunction = (key: string, params?: Record<string, string>) => string;

interface FinancialAnalysis {
  totalIncome: number;
  totalExpenses: number;
  expensesByCategory: { category: string; amount: number }[];
  currentBalance: number;
  currencySymbol: string;
  t: (key: string) => string;
}

function getRecommendationsByCategory(category: string, amount: number, totalExpenses: number, t: TFunction): string | null {
  const percentage = (amount / totalExpenses) * 100;
  const categoryName = t(`categories.${category}`);
  
  if (percentage > 50) {
    return `‚Ä¢ ‚ö†Ô∏è ${t('analytics.analysis.categoryHighSpending', { category: categoryName })}`;
  } else if (percentage > 30) {
    return `‚Ä¢ üí° ${t('analytics.analysis.categoryModerateSpending', { category: categoryName })}`;
  }
  
  return null;
}

export function analyzeFinances({ 
  totalIncome, 
  totalExpenses, 
  expensesByCategory, 
  currentBalance,
  currencySymbol,
  t 
}: FinancialAnalysis): string {
  const savings = totalIncome - totalExpenses;
  const savingsPercentage = totalIncome > 0 ? (savings / totalIncome) * 100 : 0;
  const expenseRatio = totalIncome > 0 ? (totalExpenses / totalIncome) * 100 : 0;

  // Find top spending categories
  const sortedCategories = expensesByCategory
    .sort((a, b) => b.amount - a.amount)
    .slice(0, 3);

  let analysis = `üìä ${t('analytics.analysis.overview')}\n\n`;
  analysis += `üí∞ ${t('analytics.analysis.income')}: ${currencySymbol}${totalIncome.toFixed(2)}\n`;
  analysis += `üí∏ ${t('analytics.analysis.expenses')}: ${currencySymbol}${totalExpenses.toFixed(2)}\n`;
  analysis += `‚öñÔ∏è ${t('analytics.analysis.balance')}: ${currencySymbol}${savings.toFixed(2)} (${savingsPercentage.toFixed(1)}%)\n\n`;

  // Personalized analysis based on financial situation
  if (totalIncome === 0) {
    analysis += `ü§î ${t('analytics.analysis.noIncome')}\n`;
  } else if (savingsPercentage < 0) {
    analysis += `‚ö†Ô∏è ${t('analytics.analysis.negativeSavings')}\n`;
  } else if (savingsPercentage < 20) {
    analysis += `üí° ${t('analytics.analysis.lowSavings')}\n`;
  } else {
    analysis += `‚úÖ ${t('analytics.analysis.goodSavings')}\n`;
  }

  // Expense analysis with personalized recommendations
  analysis += `\nüìà ${t('analytics.analysis.expensesByCategory')}:\n`;
  const topCategory = sortedCategories[0];
  if (topCategory) {
    const topCategoryPercentage = (topCategory.amount / totalExpenses) * 100;
    if (topCategoryPercentage > 50) {
      analysis += `‚ö†Ô∏è ${t('analytics.analysis.highCategorySpending').replace('{category}', t(`categories.${topCategory.category}`))}\n`;
    }
  }

  // Detailed category analysis
  if (sortedCategories.length > 0) {
    analysis += `\nüéØ ${t('analytics.analysis.recommendations')}:\n`;
    sortedCategories.forEach((category, index) => {
      const percentage = (category.amount / totalExpenses) * 100;
      const translatedCategory = t(`categories.${category.category}`);
      const categoryInfo = `${translatedCategory} (${currencySymbol}${category.amount.toFixed(2)} - ${percentage.toFixed(1)}%)`;
      
      let recommendation = '';
      if (percentage > 50) {
        recommendation = t('analytics.analysis.categoryHighSpending').replace('{category}', categoryInfo);
      } else if (percentage > 30) {
        recommendation = t('analytics.analysis.categoryModerateSpending').replace('{category}', categoryInfo);
      } else {
        recommendation = t('analytics.analysis.categoryLowSpending').replace('{category}', categoryInfo);
      }
      
      analysis += `‚Ä¢ ${recommendation}\n`;
    });
  }

  // Balance analysis with personalized messages
  analysis += `\nüíº ${t('analytics.analysis.balance')}: ${currencySymbol}${currentBalance.toFixed(2)}\n`;
  if (currentBalance < 0) {
    analysis += `\n‚ö†Ô∏è ${t('analytics.analysis.balanceNegative')}\n`;
    analysis += `üí° ${t('analytics.analysis.balanceNegativeAdvice')}\n`;
  } else if (currentBalance < totalExpenses) {
    analysis += `\n‚ö†Ô∏è ${t('analytics.analysis.balanceLow')}\n`;
    analysis += `üí° ${t('analytics.analysis.balanceLowAdvice')}\n`;
  } else if (currentBalance >= totalExpenses * 3) {
    analysis += `\n‚úÖ ${t('analytics.analysis.balanceGood')}\n`;
    analysis += `üí° ${t('analytics.analysis.balanceGoodAdvice')}\n`;
  }

  // Add final personalized message
  if (savingsPercentage < 0) {
    analysis += `\nüéØ ${t('analytics.analysis.immediateAction')}\n`;
  } else if (savingsPercentage < 20) {
    analysis += `\nüéØ ${t('analytics.analysis.improvementNeeded')}\n`;
  } else {
    analysis += `\nüéØ ${t('analytics.analysis.keepGoing')}\n`;
  }

  return analysis;
}

const commonResponses: Record<string, string> = {
  '–ø—Ä–∏–≤–µ—Ç': 'üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?',
  '–∫–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å': 'üí° –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ —ç–∫–æ–Ω–æ–º–∏–∏:\n\n‚Ä¢ üìù –í–µ–¥–∏—Ç–µ —É—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤\n‚Ä¢ üõí –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫–∏ –∑–∞—Ä–∞–Ω–µ–µ\n‚Ä¢ üîç –ò—â–∏—Ç–µ —Å–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏\n‚Ä¢ üí∞ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ü–µ–Ω—ã\n‚Ä¢ üè¶ –û—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ —á–∞—Å—Ç—å –¥–æ—Ö–æ–¥–∞\n\n–•–æ—Ç–∏—Ç–µ, —è –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω —ç–∫–æ–Ω–æ–º–∏–∏?',
  '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏': 'üìà –î–ª—è –Ω–∞—á–∞–ª–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–∂–Ω–æ:\n\n‚Ä¢ üí∞ –°–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É\n‚Ä¢ üìö –ò–∑—É—á–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n‚Ä¢ ‚ö†Ô∏è –ù–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å –≤—Å–µ–º–∏ –¥–µ–Ω—å–≥–∞–º–∏\n‚Ä¢ üîÑ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è\n\n–î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º, –∫–∞–∫–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–¥–æ–π–¥—É—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º?',
  '–±—é–¥–∂–µ—Ç': 'üìä –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞:\n\n‚Ä¢ üè† 50% –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã\n‚Ä¢ üéÆ 30% –Ω–∞ –∂–µ–ª–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è\n‚Ä¢ üí∞ 20% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏\n\n–•–æ—Ç–∏—Ç–µ, —è –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç?',
};

export function getAIResponse(message: string, context: string): string {
  const lowerMessage = message.toLowerCase();
  
  // Check for common questions
  for (const [key, response] of Object.entries(commonResponses)) {
    if (lowerMessage.includes(key)) {
      return response;
    }
  }

  // Parse context for personalized response
  const contextData = context.split('\n').reduce((acc, line) => {
    const [key, value] = line.split(': $');
    if (value) {
      acc[key] = parseFloat(value.replace(/,/g, ''));
    }
    return acc;
  }, {} as Record<string, number>);

  // Personalized responses based on context
  if (lowerMessage.includes('–¥–æ–ª–≥') || lowerMessage.includes('–¥–æ–ª–≥–∏')) {
    const balance = contextData['Current Balance'] || 0;
    return balance < 0 
      ? '‚ö†Ô∏è –î–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –¥–æ–ª–≥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n‚Ä¢ üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è\n‚Ä¢ üí∞ –°–æ–∫—Ä–∞—Ç–∏—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã\n‚Ä¢ üíº –ò—Å–∫–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞\n\n–•–æ—Ç–∏—Ç–µ, —è –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è –¥–æ–ª–≥–∞?'
      : '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –£ –≤–∞—Å –Ω–µ—Ç –¥–æ–ª–≥–æ–≤ - —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å.';
  }

  if (lowerMessage.includes('—Å–±–µ—Ä–µ–∂–µ–Ω–∏—è') || lowerMessage.includes('–Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è')) {
    const income = contextData['Total Income'] || 0;
    const recommendedSavings = Math.round(income * 0.2);
    return `üí∞ –î–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å $${recommendedSavings} –≤ –º–µ—Å—è—Ü (20% –æ—Ç –¥–æ—Ö–æ–¥–∞).\n\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n–•–æ—Ç–∏—Ç–µ, —è –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π?`;
  }

  if (lowerMessage.includes('–∞–Ω–∞–ª–∏–∑') || lowerMessage.includes('–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å')) {
    return 'üìä –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–∞–ª–∏–∑" –≤—ã—à–µ, –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä –≤–∞—à–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.';
  }

  // Default response
  return 'ü§î –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –∞–Ω–∞–ª–∏–∑–æ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±—é–¥–∂–µ—Ç–æ–º. –ó–∞–¥–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–∞–ª–∏–∑" –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞.\n\n–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?';
} 